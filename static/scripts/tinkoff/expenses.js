// –ö–æ–¥ jQuery –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å –∏–∑–º–µ–Ω—è–µ–º–æ–π —à–∏—Ä–∏–Ω–æ–π
$(document).ready(function () {
    $('#expensesTable').resizableColumns();
});

// –í—ã–∑–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –º–µ—Å—è—Ü
document.addEventListener("DOMContentLoaded", function () {
    loadExpensesByDefaultPeriod('month');
});

// –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã —Ä–∞—Å—Ö–æ–¥–æ–≤ —Å –±—ç–∫–∞
function loadExpenses(data) {
    $('#totalExpenses').text(`–û–±—â–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤: ${data.total_expense} ‚ÇΩ`);
    $('#totalIncome').text(`–û–±—â–∞—è —Å—É–º–º–∞ –¥–æ—Ö–æ–¥–æ–≤: ${data.total_income} ‚ÇΩ`);

    const tableBody = $('#expensesTable tbody');
    tableBody.empty();

    data.expenses.forEach(expense => {
        const row = $(`
            <tr>
                <td>${expense.date_time}</td>
                <td>${expense.card_number}</td>
                <td>${expense.transaction_type}</td>
                <td>${expense.amount} ‚ÇΩ</td>
                <td>${expense.description}</td>
                <td>
                    <select class="category-select" data-description="${expense.description}">
                        <option>${expense.category || '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'}</option>
                    </select>
                </td>
            </tr>
        `);
        tableBody.append(row);
    });

    // –ü—Ä–∏–º–µ–Ω—è–µ–º Select2
    $('.category-select').select2({
        placeholder: "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
        allowClear: true
    });

    fetchCategories()
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
function loadExpensesByDefaultPeriod(period = 'month') {
    fetch(`http://127.0.0.1:8000/tinkoff/expenses/?period=${period}`)
        .then(response => response.json())
        .then(data => loadExpenses(data))
        .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å—Ö–æ–¥–æ–≤:', error));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
function loadDayExpenses() {
    const todayDate = getTodayDate();
    loadExpensesByPeriod(toUnixTimestamp(todayDate + " 00:00:00:000"), toUnixTimestamp(todayDate + " 23:59:59:999"));
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥
function loadExpensesByPeriod(startUnixDate, endUnixDate) {
    fetch(`http://127.0.0.1:8000/tinkoff/expenses/?rangeStart=${startUnixDate}&rangeEnd=${endUnixDate}`)
        .then(response => response.json())
        .then(data => loadExpenses(data))
        .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å—Ö–æ–¥–æ–≤:', error));
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–ø–∏—Å–æ–∫
function fetchCategories() {
    fetch('/tinkoff/expenses/categories/')
        .then(response => response.json())
        .then(categories => {
            const uniqueCategories = [];
            const categoryOptions = categories.filter(category => {
                if (!uniqueCategories.includes(category.category_name)) {
                    uniqueCategories.push(category.category_name);
                    return true;
                }
                return false;
            }).map(category => ({
                id: category.id,
                text: category.category_name
            }));

            $('.category-select').select2({
                data: categoryOptions,
                placeholder: "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                allowClear: true,
                templateResult: function (category) {
                    if (!category.id) return category.text;
                    // –í–º–µ—Å—Ç–æ `onclick`, –Ω–∞–∑–Ω–∞—á–∞–µ–º –∫–ª–∞—Å—Å `delete-icon`
                    return $(`<span>${category.text} <span class="delete-icon" data-id="${category.id}" data-name="${category.text}">üóëÔ∏è</span></span>`);
                }
            });
        })
        .catch(error => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error));

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º `delete-icon`
    $(document).on('click', '.delete-icon', function () {
        const categoryId = $(this).data('id');
        const categoryName = $(this).data('name');
        deleteCategory(categoryId, categoryName); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
function handleCategorySelect(selectElement) {
    if (selectElement.value === "add") {
        document.getElementById("addCategorySection").style.display = "block";
    }
}
